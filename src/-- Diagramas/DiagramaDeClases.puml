

@startuml TaskList


class App{

    -tareas:Tarea[]

    +crearTarea():Tarea
    +editarTarea(tarea:Tarea,parametro:parametroTarea,valor:??):void
    +eliminarTarea(tarea:Tarea):void
    +ordenarTareas(tareas:Tarea[]):void
    +buscarTareaPor(tarea:Tarea,valorAbuscar): Tarea


    +organizarTareasPorCategoria():Tarea
    
    +existeTarea (tarea:Tarea):bool
}

class GestorDeArchivos{

}

class Estadistica{

    -gestorDeFechas: GestorDeFechas

    +tareasCompletadas(tareas:Tarea[]): Tarea[]
    +tareasPendientes(tareas:Tarea[]): Tarea[]
    -filtrarPorEstadoTareas(tareas: Tarea[],filtro : string) : Tarea[]

    +tazaFinalizacionTareas(tareas:Tarea[]) : number
    +tazaFinalizacionTarea(tarea:Tarea): number
    +tiempoDedicadoATarea(tarea:Tarea): number

}

class GestorDeFechas {
    +diaFecha(fecha:Date):Number
    +mesFecha(fecha:Date):Number
    +a単oFecha(fecha:Date):Number
    +capturarFechaActual():Date
    +nuevaFecha(dia:number,mes:number,a単o:number):Date
    +tiempoTranscurridoEnMilisegundos(fechaInicio:Date):number
    
    //+Funciones De conversiones

    }

enum EstadoTarea{
    COMPLETADO
    PENDIENTE
}

enum PrioridadTarea{
    ALTA
    MEDIA
    BAJA
}


class Tarea {
    
     -titulo:string
    -descripcion:string
    -porcentajeAvance:number
    -prioridad:Prioridad
    -etiquetas:string[] 
    -estado: number
    -fechaVencimientoTarea: Date
    -estadoTarea: EstadoTarea
    -prioridadTarea: PrioridadTarea
    +setterGetters()
    +a単adirEtiqueta(etiqueta:Etiqueta):void
    +eliminarEtiqueta(etiqueta:Etiqueta):void
    +marcarTareaCompleta():void
}



'Relaciones

App *-right- Tarea
App *-left- Estadistica
App -down-> GestorDeArchivos

Tarea -up-> PrioridadTarea
Tarea -up-> EstadoTarea
Tarea -down->Etiqueta

Estadistica -down-> GestorDeFechas 


note right of Tarea
    Profe aqui podemos aplicar patron de dise単o builder?

end note


note right of Tarea::etiquetas
    set
end note



@enduml